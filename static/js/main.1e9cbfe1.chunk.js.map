{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","App.js","serviceWorker.js","index.js"],"names":["Business","react_default","a","createElement","className","src","this","props","business","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","components_Business_Business","key","id","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","term","location","sortBy","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","sortByOptions","Best Match","Highest Rated","Most Reviewed","sortByOption","setState","event","target","value","preventDefault","searchYelp","_this2","keys","sortByOptionValue","getSortByClass","onClick","handleSortByChange","renderSortByOptions","placeholder","onChange","Yelp","search","fetch","concat","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","App","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4TA4BeA,sMAvBb,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,KAAKC,MAAMC,SAASC,SAAUC,IAAKJ,KAAKC,MAAMC,SAASG,QAEnEV,EAAAC,EAAAC,cAAA,UAAKG,KAAKC,MAAMC,SAASG,MACzBV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACZH,EAAAC,EAAAC,cAAA,SAAIG,KAAKC,MAAMC,SAASI,SACxBX,EAAAC,EAAAC,cAAA,SAAIG,KAAKC,MAAMC,SAASK,MACxBZ,EAAAC,EAAAC,cAAA,SAAIG,KAAKC,MAAMC,SAASM,MAAxB,IAAgCR,KAAKC,MAAMC,SAASO,UAEvDd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACZH,EAAAC,EAAAC,cAAA,UAAKG,KAAKC,MAAMC,SAASQ,UACzBf,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAUE,KAAKC,MAAMC,SAASS,QAC5ChB,EAAAC,EAAAC,cAAA,SAAIG,KAAKC,MAAMC,SAASU,uBAjBZC,IAAMC,YCadC,mLAVb,OACCpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbE,KAAKC,MAAMe,WAAWC,IAAI,SAAAf,GAC1B,OAAOP,EAAAC,EAAAC,cAACqB,EAAD,CAAUC,IAAKjB,EAASkB,GAAIlB,SAAUA,cALvBW,IAAMC,WCqElBO,qBArEd,SAAAA,EAAYpB,GAAM,IAAAqB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAvB,KAAAqB,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAvB,KAAAuB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAA3B,KAAMC,KACDO,MAAQ,CACZoB,KAAM,GACNC,SAAU,GACVC,OAAQ,cAETR,EAAKS,iBAAmBT,EAAKS,iBAAiBC,KAAtBT,OAAAU,EAAA,EAAAV,CAAAD,IACxBA,EAAKY,qBAAuBZ,EAAKY,qBAAqBF,KAA1BT,OAAAU,EAAA,EAAAV,CAAAD,IAC5BA,EAAKa,aAAeb,EAAKa,aAAaH,KAAlBT,OAAAU,EAAA,EAAAV,CAAAD,IACpBA,EAAKc,cAAgB,CACpBC,aAAc,aACdC,gBAAiB,SACjBC,gBAAiB,gBAbDjB,8EAgBHkB,GACd,OAAGxC,KAAKQ,MAAMsB,SAAWU,EACjB,SAEA,8CAGUA,GAClBxC,KAAKyC,SAAS,CAACX,OAAQU,6CAEPE,GAChB1C,KAAKyC,SAAS,CAACb,KAAMc,EAAMC,OAAOC,qDAEdF,GACpB1C,KAAKyC,SAAS,CAACZ,SAAUa,EAAMC,OAAOC,QACtCF,EAAMG,sDAEMH,GACZ1C,KAAKC,MAAM6C,WAAW9C,KAAKQ,MAAMoB,KAAM5B,KAAKQ,MAAMqB,SAAU7B,KAAKQ,MAAMsB,sDAEnD,IAAAiB,EAAA/C,KACpB,OAAOuB,OAAOyB,KAAKhD,KAAKoC,eAAenB,IAAI,SAAAuB,GAC1C,IAAIS,EAAoBF,EAAKX,cAAcI,GAC3C,OAAO7C,EAAAC,EAAAC,cAAA,MAAIsB,IAAK8B,EACXnD,UAAWiD,EAAKG,eAAeD,GAC/BE,QAASJ,EAAKK,mBAAmBpB,KAAKe,EAAME,IAC3CT,sCAKP,OACC7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,UACIG,KAAKqD,wBAGX1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,SAAOyD,YAAY,oBACpBC,SAAUvD,KAAK+B,mBACdpC,EAAAC,EAAAC,cAAA,SAAOyD,YAAY,SACpBC,SAAUvD,KAAKkC,wBAEhBvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACdqD,QAASnD,KAAKmC,cACbxC,EAAAC,EAAAC,cAAA,8BA/DgBgB,IAAMC,YC0Bf0C,EA5BF,CACXC,OADW,SACJ7B,EAAMC,EAAUC,GACrB,OAAO4B,MAAK,sFAAAC,OAAuF/B,EAAvF,cAAA+B,OAAwG9B,EAAxG,aAAA8B,OAA4H7B,GACxI,CAAC8B,QAAS,CACRC,cAAa,UAAAF,OALJ,uIAMPG,KAAK,SAAAC,GACP,OAAOA,EAASC,SACfF,KAAK,SAAAG,GACN,GAAGA,EAAajD,WACd,OAAOiD,EAAajD,WAAWC,IAAI,SAAAf,GACjC,MAAO,CACLkB,GAAIlB,EAASkB,GACbjB,SAAUD,EAASgE,UACnB7D,KAAMH,EAASG,KACfC,QAASJ,EAAS2B,SAASsC,SAC3B5D,KAAML,EAAS2B,SAAStB,KACxBC,MAAON,EAAS2B,SAASrB,MACzBC,QAASP,EAAS2B,SAASuC,SAC3B1D,SAAUR,EAASmE,WAAW,GAAGC,MACjC3D,OAAQT,EAASS,OACjBC,YAAaV,EAASqE,oBCUnBC,cAxBd,SAAAA,EAAYvE,GAAM,IAAAqB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAvB,KAAAwE,IACjBlD,EAAAC,OAAAE,EAAA,EAAAF,CAAAvB,KAAAuB,OAAAG,EAAA,EAAAH,CAAAiD,GAAA7C,KAAA3B,KAAMC,KACDO,MAAQ,CACZQ,WAAY,IAEbM,EAAKwB,WAAaxB,EAAKwB,WAAWd,KAAhBT,OAAAU,EAAA,EAAAV,CAAAD,IALDA,0EAOPM,EAAMC,EAAUC,GAAO,IAAAiB,EAAA/C,KAEjCwD,EAAKC,OAAO7B,EAAMC,EAAUC,GAAQgC,KAAK,SAAC9C,GACzC+B,EAAKN,SAAS,CAACzB,WAAYA,uCAI3B,OACErB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAC4E,EAAD,CAAW3B,WAAY9C,KAAK8C,aAC5BnD,EAAAC,EAAAC,cAAC6E,EAAD,CAAc1D,WAAYhB,KAAKQ,MAAMQ,qBAnB1BH,IAAMC,WCMJ6D,QACW,cAA7BC,OAAO/C,SAASgD,UAEe,UAA7BD,OAAO/C,SAASgD,UAEhBD,OAAO/C,SAASgD,SAASC,MACvB,2DCZNC,IAASC,OAAOrF,EAAAC,EAAAC,cAACoF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxB,KAAK,SAAAyB,GACjCA,EAAaC","file":"static/js/main.1e9cbfe1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Business.css';\r\n\r\nclass Business extends React.Component {\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className=\"Business\">\r\n  \t\t\t\t<div className=\"image-container\">\r\n    \t\t\t\t<img src={this.props.business.imageSrc} alt={this.props.business.name}/>\r\n  \t\t\t\t</div>\r\n  \t\t\t\t<h2>{this.props.business.name}</h2>\r\n  \t\t\t\t<div className=\"Business-information\">\r\n    \t\t\t\t<div className=\"Business-address\">\r\n      \t\t\t\t\t<p>{this.props.business.address}</p>\r\n      \t\t\t\t\t<p>{this.props.business.city}</p>\r\n      \t\t\t\t\t<p>{this.props.business.state} {this.props.business.zipCode}</p>\r\n    \t\t\t\t</div>\r\n    \t\t\t\t<div className=\"Business-reviews\">\r\n      \t\t\t\t\t<h3>{this.props.business.category}</h3>\r\n      \t\t\t\t\t<h3 className=\"rating\">{this.props.business.rating}</h3>\r\n      \t\t\t\t\t<p>{this.props.business.reviewCount}</p>\r\n    \t\t\t\t</div>\r\n  \t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Business;\r\n","import React from 'react';\r\nimport './BusinessList.css';\r\nimport Business from '../Business/Business.js';\r\n\r\nclass BusinessList extends React.Component {\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className=\"BusinessList\">\r\n\t\t\t\t{this.props.businesses.map(business => {\r\n\t\t\t\t\treturn <Business key={business.id} business={business}/>;\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default BusinessList;\r\n","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tterm: '',\r\n\t\t\tlocation: '',\r\n\t\t\tsortBy: 'best_match'\r\n\t\t};\r\n\t\tthis.handleTermChange = this.handleTermChange.bind(this);\r\n\t\tthis.handleLocationChange = this.handleLocationChange.bind(this);\r\n\t\tthis.handleSearch = this.handleSearch.bind(this);\r\n\t\tthis.sortByOptions = {\r\n\t\t\t'Best Match': 'best_match',\r\n\t\t\t'Highest Rated': 'rating',\r\n\t\t\t'Most Reviewed': 'review_count'\r\n\t\t};\r\n\t}\r\n\tgetSortByClass(sortByOption){\r\n\t\tif(this.state.sortBy === sortByOption){\r\n\t\t\treturn 'active'\r\n\t\t}else{\r\n\t\t\treturn ''\r\n\t\t}\r\n\t}\r\n\thandleSortByChange(sortByOption){\r\n\t\tthis.setState({sortBy: sortByOption})\r\n\t}\r\n\thandleTermChange(event){\r\n\t\tthis.setState({term: event.target.value})\r\n\t}\r\n\thandleLocationChange(event){\r\n\t\tthis.setState({location: event.target.value});\r\n\t\tevent.preventDefault();\r\n\t}\r\n\thandleSearch(event){\r\n\t\tthis.props.searchYelp(this.state.term, this.state.location, this.state.sortBy)\r\n\t}\r\n\trenderSortByOptions(){\r\n\t\treturn Object.keys(this.sortByOptions).map(sortByOption => {\r\n\t\t\tlet sortByOptionValue = this.sortByOptions[sortByOption];\r\n\t\t\treturn <li key={sortByOptionValue}\r\n\t\t\t\t\t\t\t\tclassName={this.getSortByClass(sortByOptionValue)}\r\n\t\t\t\t\t\t\t\tonClick={this.handleSortByChange.bind(this, sortByOptionValue)}>\r\n\t\t\t\t\t\t\t\t{sortByOption}</li>;\r\n\t\t});\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className=\"SearchBar\">\r\n  \t\t\t\t<div className=\"SearchBar-sort-options\">\r\n    \t\t\t\t<ul>\r\n      \t\t\t\t\t{this.renderSortByOptions()}\r\n    \t\t\t\t</ul>\r\n  \t\t\t\t</div>\r\n  \t\t\t\t<div className=\"SearchBar-fields\">\r\n    \t\t\t\t<input placeholder=\"Search Businesses\"\r\n\t\t\t\t\t\t\tonChange={this.handleTermChange}/>\r\n    \t\t\t\t<input placeholder=\"Where?\"\r\n\t\t\t\t\t\t\tonChange={this.handleLocationChange}/>\r\n  \t\t\t\t</div>\r\n  \t\t\t\t<div className=\"SearchBar-submit\"\r\n\t\t\t\t\t\t\tonClick={this.handleSearch}>\r\n    \t\t\t\t<a>Let's Go</a>\r\n  \t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default SearchBar;\r\n","const apiKey = 'gM3_RpWLJZo1j82INGyMACfw30rIpOFH2zDo-CI9-j6WIFqU71ReTOMmT59dqexLtnv0i9KY1sSYV0bHvhFmNq1YxDd1Irz5nuu8hb9YY7kNhQGY3A3ms3odyzAHXXYx';\r\nconst Yelp = {\r\n  search(term, location, sortBy){\r\n    return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`,\r\n    {headers: {\r\n      Authorization: `Bearer ${apiKey}`\r\n    }}).then(response => {\r\n      return response.json()\r\n    }).then(jsonResponse => {\r\n      if(jsonResponse.businesses){\r\n        return jsonResponse.businesses.map(business => {\r\n          return {\r\n            id: business.id,\r\n            imageSrc: business.image_url,\r\n            name: business.name,\r\n            address: business.location.address1,\r\n            city: business.location.city,\r\n            state: business.location.state,\r\n            zipCode: business.location.zip_code,\r\n            category: business.categories[0].title,\r\n            rating: business.rating,\r\n            reviewCount: business.review_count\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport default Yelp;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport BusinessList from './components/BusinessList/BusinessList.js';\r\nimport SearchBar from './components/SearchBar/SearchBar.js';\r\nimport Yelp from './util/Yelp.js';\r\n\r\nclass App extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tbusinesses: [],\r\n\t\t};\r\n\t\tthis.searchYelp = this.searchYelp.bind(this);\r\n\t}\r\n\tsearchYelp(term, location, sortBy){\r\n\t\t//console.log(`Searching Yelp with ${term}, ${location}, ${sortBy}`);\r\n\t\tYelp.search(term, location, sortBy).then((businesses) =>{\r\n\t\t\tthis.setState({businesses: businesses})\r\n\t\t});\r\n\t}\r\n\trender(){\r\n  \treturn (\r\n    \t<div className=\"App\">\r\n      \t<h1>ravenous</h1>\r\n      \t<SearchBar searchYelp={this.searchYelp}/>\r\n      \t<BusinessList businesses={this.state.businesses}/>\r\n    \t</div>\r\n  \t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}